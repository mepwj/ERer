name: ERer Client

# main 브랜치에 push 발생 시 실행
on:
  push:
    branches:
      - main

jobs:
  # client 디렉토리 내 변경 사항 감지
  changes:
    runs-on: ubuntu-latest
    outputs:
      client: ${{ steps.filter.outputs.client }}
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: 변경 사항 확인
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            client:
              - 'client/**'

  # client 디렉토리 변경이 감지되면 빌드 실행
  build-client:
    needs: changes
    if: ${{ needs.changes.outputs.client == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: GHCR 로그인
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
          if [ $? -ne 0 ]; then
            echo "❌ GHCR 로그인 실패"
            exit 1
          fi
          echo "✅ GHCR 로그인 성공"

      - name: 클라이언트 이미지 빌드 및 GHCR에 푸시
        run: |
          echo "🏗️ 클라이언트 이미지 빌드 중..."
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/erer-client:latest ./client
          echo "🚀 클라이언트 이미지를 GHCR에 푸시 중..."
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/erer-client:latest

      - name: 푸시한 클라이언트 이미지 확인
        run: |
          echo "🔎 GHCR에 클라이언트 이미지 확인 중..."
          curl -H "Authorization: token ${{ secrets.GHCR_TOKEN }}" https://ghcr.io/v2/${{ secrets.GHCR_USERNAME }}/erer-client/tags/list || {
            echo "❌ GHCR에서 클라이언트 이미지 확인 실패"
            exit 1
          }
          echo "✅ GHCR에 클라이언트 이미지 확인 완료"

  # 빌드 완료 후 EC2에 배포
  deploy-client:
    needs: build-client
    if: ${{ needs.changes.outputs.client == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 클라이언트 EC2 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🚀 클라이언트 배포 시작..."

            # ✅ 기존 컨테이너 중지 및 삭제
            echo "🛑 기존 클라이언트 컨테이너 중지 및 삭제 중..."
            docker stop erer-client || true
            docker rm erer-client || true

            # ✅ 기존 Docker 이미지 삭제
            echo "🗑️ 기존 Docker 이미지 삭제 중..."
            docker rmi ghcr.io/${{ secrets.GHCR_USERNAME }}/erer-client:latest || true

            # ✅ 최신 Docker 이미지 가져오기
            echo "⬇️ 최신 클라이언트 Docker 이미지 가져오는 중..."
            docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/erer-client:latest || {
              echo "❌ 클라이언트 이미지 가져오기 실패"
              exit 1
            }
            echo "✅ 클라이언트 이미지 가져오기 완료"

            # ✅ 새 컨테이너 실행
            echo "🚀 새로운 클라이언트 컨테이너 실행 중..."
            docker run -d --name erer-client -p 3000:3000 --restart always ghcr.io/${{ secrets.GHCR_USERNAME }}/erer-client:latest

            echo "✅ 클라이언트 배포 완료!"
